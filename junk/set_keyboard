#!/bin/bash

# Script to configure Mac keyboard support for Linux desktop environment
# This script handles all keyboard-related configuration including:
# - System-wide keyboard configuration
# - Runtime keyboard layout setting
# - Autostart scripts for desktop sessions
# - User-specific keyboard fixes

set -e  # Exit on any error
# Function to show usage
show_usage() {
    echo "Usage: $0 [OPTIONS]"
    echo ""
    echo "Options:"
    echo "  --system           Configure system-wide keyboard settings"
    echo "  --runtime          Set keyboard layout for current session"
    echo "  --autostart        Create autostart scripts for desktop sessions"
    echo "  --all              Configure all keyboard settings (default)"
    echo "  --user USERNAME    Configure keyboard for specific user"
    echo "  --help             Show this help message"
    echo ""
    echo "Examples:"
    echo "  $0                 # Configure all keyboard settings"
    echo "  $0 --system        # Only configure system-wide settings"
    echo "  $0 --runtime       # Only set current session layout"
    echo "  $0 --user testuser # Configure for specific user"
    echo ""
    echo "Keyboard Configuration:"
    echo "  - Layout: US"
    echo "  - Variant: None (to fix arrow keys)"
    echo "  - Options: altwin:swap_lalt_lwin (Command/Alt key swap)"
}

# Default values
CONFIGURE_SYSTEM="false"
CONFIGURE_RUNTIME="false"
CONFIGURE_AUTOSTART="false"
CONFIGURE_ALL="true"
TARGET_USER=""

# Parse command line arguments
while [[ $# -gt 0 ]]; do
    case $1 in
        --system)
            CONFIGURE_SYSTEM="true"
            CONFIGURE_ALL="false"
            shift
            ;;
        --runtime)
            CONFIGURE_RUNTIME="true"
            CONFIGURE_ALL="false"
            shift
            ;;
        --autostart)
            CONFIGURE_AUTOSTART="true"
            CONFIGURE_ALL="false"
            shift
            ;;
        --all)
            CONFIGURE_ALL="true"
            shift
            ;;
        --user)
            TARGET_USER="$2"
            shift 2
            ;;
        --help|-h)
            show_usage
            exit 0
            ;;
        *)
            echo "Unknown option: $1"
            show_usage
            exit 1
            ;;
    esac
done

# Function to configure system-wide keyboard settings
configure_system_keyboard() {
    # Create /etc/default/keyboard configuration
    cat > /etc/default/keyboard << 'EOF'
XKBMODEL="pc105"
XKBLAYOUT="us"
XKBVARIANT=""
XKBOPTIONS="altwin:swap_lalt_lwin"
BACKSPACE="guess"
EOF
}

# Function to set keyboard layout for current session
configure_runtime_keyboard() {
    if command -v setxkbmap >/dev/null 2>&1; then
        # Set Mac keyboard layout (without variant to fix arrow keys)
        setxkbmap -layout us -option altwin:swap_lalt_lwin 2>/dev/null || true
    fi
}

# Function to create autostart scripts
configure_autostart_keyboard() {
    # Create autostart directory
    mkdir -p /etc/xdg/autostart
    
    # Create Mac keyboard autostart script
    cat > /usr/local/bin/fix-mac-keyboard.sh << 'EOF'
#!/bin/bash
# Fix Mac keyboard layout on desktop startup
sleep 2  # Wait for desktop to fully load
if [ -n "$DISPLAY" ]; then
    setxkbmap -layout us -option altwin:swap_lalt_lwin 2>/dev/null || true
fi
EOF
    chmod +x /usr/local/bin/fix-mac-keyboard.sh
    
    # Create autostart entry for keyboard fix
    cat > /etc/xdg/autostart/fix-mac-keyboard.desktop << 'EOF'
[Desktop Entry]
Type=Application
Name=Fix Mac Keyboard
Comment=Fix Mac keyboard layout on startup
Exec=/usr/local/bin/fix-mac-keyboard.sh
Hidden=false
NoDisplay=false
X-GNOME-Autostart-enabled=true
EOF
}

# Function to configure keyboard for specific user
configure_user_keyboard() {
    local username="$1"
    local user_home="/home/$username"
    
    if [ -z "$username" ] || [ ! -d "$user_home" ]; then
        return 1
    fi
    
    # Create user-specific keyboard fix script
    cat > "$user_home/fix-keyboard.sh" << 'EOF'
#!/bin/bash
# User-specific keyboard fix script
if [ -n "$DISPLAY" ]; then
    setxkbmap -layout us -option altwin:swap_lalt_lwin 2>/dev/null || true
fi
EOF
    chmod +x "$user_home/fix-keyboard.sh"
    chown "$username:$username" "$user_home/fix-keyboard.sh"
    
    # Add keyboard fix to user's bashrc if not already present
    local bashrc_file="$user_home/.bashrc"
    if [ -f "$bashrc_file" ]; then
        if ! grep -q "fix-keyboard.sh" "$bashrc_file"; then
            echo "" >> "$bashrc_file"
            echo "# Auto-fix Mac keyboard layout" >> "$bashrc_file"
            echo "if [ -n \"\$DISPLAY\" ]; then" >> "$bashrc_file"
            echo "    \$HOME/fix-keyboard.sh 2>/dev/null || true" >> "$bashrc_file"
            echo "fi" >> "$bashrc_file"
        fi
    fi
    
    chown "$username:$username" "$bashrc_file" 2>/dev/null || true
}

# Main execution
main() {
    if [ "$CONFIGURE_ALL" = "true" ]; then
        CONFIGURE_SYSTEM="true"
        CONFIGURE_RUNTIME="true"
        CONFIGURE_AUTOSTART="true"
    fi
    
    if [ "$CONFIGURE_SYSTEM" = "true" ]; then
        configure_system_keyboard
    fi
    
    if [ "$CONFIGURE_RUNTIME" = "true" ]; then
        configure_runtime_keyboard
    fi
    
    if [ "$CONFIGURE_AUTOSTART" = "true" ]; then
        configure_autostart_keyboard
    fi
    
    if [ -n "$TARGET_USER" ]; then
        configure_user_keyboard "$TARGET_USER"
    fi
    
    echo "image/scripts/set_keyboard Mac keyboard configured"
}
# Run main function
main
